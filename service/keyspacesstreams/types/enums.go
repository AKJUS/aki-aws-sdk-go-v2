// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type OriginType string

// Enum values for OriginType
const (
	OriginTypeUser        OriginType = "USER"
	OriginTypeReplication OriginType = "REPLICATION"
	OriginTypeTtl         OriginType = "TTL"
)

// Values returns all known values for OriginType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OriginType) Values() []OriginType {
	return []OriginType{
		"USER",
		"REPLICATION",
		"TTL",
	}
}

type ShardFilterType string

// Enum values for ShardFilterType
const (
	ShardFilterTypeChildShards ShardFilterType = "CHILD_SHARDS"
)

// Values returns all known values for ShardFilterType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ShardFilterType) Values() []ShardFilterType {
	return []ShardFilterType{
		"CHILD_SHARDS",
	}
}

type ShardIteratorType string

// Enum values for ShardIteratorType
const (
	ShardIteratorTypeTrimHorizon         ShardIteratorType = "TRIM_HORIZON"
	ShardIteratorTypeLatest              ShardIteratorType = "LATEST"
	ShardIteratorTypeAtSequenceNumber    ShardIteratorType = "AT_SEQUENCE_NUMBER"
	ShardIteratorTypeAfterSequenceNumber ShardIteratorType = "AFTER_SEQUENCE_NUMBER"
)

// Values returns all known values for ShardIteratorType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ShardIteratorType) Values() []ShardIteratorType {
	return []ShardIteratorType{
		"TRIM_HORIZON",
		"LATEST",
		"AT_SEQUENCE_NUMBER",
		"AFTER_SEQUENCE_NUMBER",
	}
}

type StreamStatus string

// Enum values for StreamStatus
const (
	StreamStatusEnabling  StreamStatus = "ENABLING"
	StreamStatusEnabled   StreamStatus = "ENABLED"
	StreamStatusDisabling StreamStatus = "DISABLING"
	StreamStatusDisabled  StreamStatus = "DISABLED"
)

// Values returns all known values for StreamStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StreamStatus) Values() []StreamStatus {
	return []StreamStatus{
		"ENABLING",
		"ENABLED",
		"DISABLING",
		"DISABLED",
	}
}

type StreamViewType string

// Enum values for StreamViewType
const (
	StreamViewTypeNewImage        StreamViewType = "NEW_IMAGE"
	StreamViewTypeOldImage        StreamViewType = "OLD_IMAGE"
	StreamViewTypeNewAndOldImages StreamViewType = "NEW_AND_OLD_IMAGES"
	StreamViewTypeKeysOnly        StreamViewType = "KEYS_ONLY"
)

// Values returns all known values for StreamViewType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StreamViewType) Values() []StreamViewType {
	return []StreamViewType{
		"NEW_IMAGE",
		"OLD_IMAGE",
		"NEW_AND_OLD_IMAGES",
		"KEYS_ONLY",
	}
}

type ValidationExceptionType string

// Enum values for ValidationExceptionType
const (
	ValidationExceptionTypeInvalidFormat     ValidationExceptionType = "InvalidFormat"
	ValidationExceptionTypeTrimmedDataAccess ValidationExceptionType = "TrimmedDataAccess"
	ValidationExceptionTypeExpiredIterator   ValidationExceptionType = "ExpiredIterator"
	ValidationExceptionTypeExpiredNextToken  ValidationExceptionType = "ExpiredNextToken"
)

// Values returns all known values for ValidationExceptionType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ValidationExceptionType) Values() []ValidationExceptionType {
	return []ValidationExceptionType{
		"InvalidFormat",
		"TrimmedDataAccess",
		"ExpiredIterator",
		"ExpiredNextToken",
	}
}
